# Generated by Django 5.2.5 on 2025-08-21 16:51

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0002_employee_expected_hours'),
    ]

    operations = [
        migrations.CreateModel(
            name='KanbanBoard',
            fields=[
                ('board_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('board_type', models.CharField(choices=[('development', 'Development'), ('design', 'Design'), ('marketing', 'Marketing'), ('content', 'Content'), ('custom', 'Custom')], default='development', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='KanbanColumn',
            fields=[
                ('column_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('wip_limit', models.PositiveIntegerField(blank=True, help_text='Work in progress limit', null=True)),
                ('color', models.CharField(default='#3B82F6', help_text='Hex color for column', max_length=7)),
                ('is_backlog', models.BooleanField(default=False)),
                ('is_done', models.BooleanField(default=False)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='projects.kanbanboard')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('project_type', models.CharField(choices=[('agile', 'Agile/Scrum'), ('kanban', 'Kanban'), ('hybrid', 'Hybrid')], default='agile', max_length=10)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('on_hold', 'On Hold'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', max_length=15)),
                ('sprint_duration_weeks', models.PositiveIntegerField(default=2, help_text='Sprint duration in weeks')),
                ('story_point_scale', models.CharField(default='fibonacci', help_text='Story point scale (fibonacci, t-shirt, etc.)', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_projects', to='employees.employee')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='kanbanboard',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kanban_boards', to='projects.project'),
        ),
        migrations.CreateModel(
            name='Epic',
            fields=[
                ('epic_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('business_value', models.PositiveIntegerField(help_text='Business value from 1-100', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('status', models.CharField(default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('epic_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_epics', to='employees.employee')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='epics', to='projects.project')),
            ],
            options={
                'ordering': ['-priority', '-business_value', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('product_owner', 'Product Owner'), ('scrum_master', 'Scrum Master'), ('developer', 'Developer'), ('designer', 'Designer'), ('qa', 'QA Engineer'), ('stakeholder', 'Stakeholder')], default='developer', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.employee')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='team_members',
            field=models.ManyToManyField(related_name='projects', through='projects.ProjectMember', to='employees.employee'),
        ),
        migrations.CreateModel(
            name='Sprint',
            fields=[
                ('sprint_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('goal', models.TextField(blank=True, null=True)),
                ('velocity_target', models.PositiveIntegerField(blank=True, help_text='Target story points for this sprint', null=True)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sprints', to='projects.project')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='SprintMetrics',
            fields=[
                ('metric_id', models.AutoField(primary_key=True, serialize=False)),
                ('planned_story_points', models.PositiveIntegerField(default=0)),
                ('completed_story_points', models.PositiveIntegerField(default=0)),
                ('actual_velocity', models.PositiveIntegerField(default=0)),
                ('daily_burndown', models.JSONField(default=dict, help_text='Daily story point burndown data')),
                ('bugs_found', models.PositiveIntegerField(default=0)),
                ('bugs_fixed', models.PositiveIntegerField(default=0)),
                ('total_estimated_hours', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_actual_hours', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sprint', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='projects.sprint')),
            ],
        ),
        migrations.CreateModel(
            name='UserStory',
            fields=[
                ('story_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('acceptance_criteria', models.TextField(blank=True, null=True)),
                ('story_points', models.PositiveIntegerField(blank=True, help_text='Story points for estimation', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('business_value', models.PositiveIntegerField(help_text='Business value from 1-100', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('status', models.CharField(choices=[('backlog', 'Backlog'), ('sprint_backlog', 'Sprint Backlog'), ('in_progress', 'In Progress'), ('in_review', 'In Review'), ('testing', 'Testing'), ('done', 'Done'), ('cancelled', 'Cancelled')], default='backlog', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('actual_hours', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_stories', to='employees.employee')),
                ('epic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_stories', to='projects.epic')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_stories', to='projects.project')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_stories', to='employees.employee')),
                ('sprint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_stories', to='projects.sprint')),
            ],
            options={
                'ordering': ['-priority', '-business_value', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='KanbanCard',
            fields=[
                ('card_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_cards', to='employees.employee')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='projects.kanbanboard')),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='projects.kanbancolumn')),
                ('user_story', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kanban_cards', to='projects.userstory')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddIndex(
            model_name='kanbancolumn',
            index=models.Index(fields=['board', 'order'], name='projects_ka_board_i_63fe3b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='kanbancolumn',
            unique_together={('board', 'order')},
        ),
        migrations.AddIndex(
            model_name='kanbanboard',
            index=models.Index(fields=['project', 'board_type'], name='projects_ka_project_5b65b0_idx'),
        ),
        migrations.AddIndex(
            model_name='epic',
            index=models.Index(fields=['project', 'status'], name='projects_ep_project_e7fac1_idx'),
        ),
        migrations.AddIndex(
            model_name='epic',
            index=models.Index(fields=['priority', 'business_value'], name='projects_ep_priorit_cc84d3_idx'),
        ),
        migrations.AddIndex(
            model_name='projectmember',
            index=models.Index(fields=['project', 'role'], name='projects_pr_project_5b8833_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='projectmember',
            unique_together={('project', 'employee')},
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['status', 'project_type'], name='projects_pr_status_b41d0a_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['owner', 'status'], name='projects_pr_owner_i_4798b7_idx'),
        ),
        migrations.AddIndex(
            model_name='sprint',
            index=models.Index(fields=['project', 'status'], name='projects_sp_project_b718db_idx'),
        ),
        migrations.AddIndex(
            model_name='sprint',
            index=models.Index(fields=['start_date', 'end_date'], name='projects_sp_start_d_3190a1_idx'),
        ),
        migrations.AddIndex(
            model_name='sprintmetrics',
            index=models.Index(fields=['sprint'], name='projects_sp_sprint__607d1a_idx'),
        ),
        migrations.AddIndex(
            model_name='userstory',
            index=models.Index(fields=['project', 'status'], name='projects_us_project_d0e382_idx'),
        ),
        migrations.AddIndex(
            model_name='userstory',
            index=models.Index(fields=['sprint', 'status'], name='projects_us_sprint__d7c61f_idx'),
        ),
        migrations.AddIndex(
            model_name='userstory',
            index=models.Index(fields=['assignee', 'status'], name='projects_us_assigne_4fc7a6_idx'),
        ),
        migrations.AddIndex(
            model_name='userstory',
            index=models.Index(fields=['priority', 'business_value'], name='projects_us_priorit_127b01_idx'),
        ),
        migrations.AddIndex(
            model_name='kanbancard',
            index=models.Index(fields=['board', 'column', 'order'], name='projects_ka_board_i_3ae72c_idx'),
        ),
        migrations.AddIndex(
            model_name='kanbancard',
            index=models.Index(fields=['assignee', 'due_date'], name='projects_ka_assigne_18a0e1_idx'),
        ),
    ]
